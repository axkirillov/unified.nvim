*unified.txt* Inline unified diffs for Neovim

License: MIT

==============================================================================
CONTENTS                                                 *unified-contents*

1. Introduction ............................. |unified-introduction|
2. Requirements ............................ |unified-requirements|
3. Installation ............................ |unified-installation|
4. Configuration ........................... |unified-configuration|
5. Usage ................................... |unified-usage|
6. Commands ................................ |unified-commands|
7. API ..................................... |unified-api|
8. Mappings ................................ |unified-mappings|
9. Troubleshooting ......................... |unified-troubleshooting|

==============================================================================

1.  INTRODUCTION                                         *unified-introduction*

unified.nvim is a plugin for Neovim that displays unified diffs inline in your
buffers. It shows the differences between the current buffer content and a
reference commit (e.g., HEAD).

==============================================================================
2. REQUIREMENTS                                        *unified-requirements*

  - Neovim >= 0.5.0
  - `diff` command available in your PATH
  - A Nerd Font installed and configured in your terminal/GUI for file icons.

==============================================================================
3. INSTALLATION                                        *unified-installation*

Using packer.nvim: >
use {
  'axkirillov/unified.nvim',
  config = function()
    require('unified').setup({
      -- Optional configuration
    })
  end
}
<
Using lazy.nvim: >
{
  'axkirillov/unified.nvim',
  config = function()
    require('unified').setup({
      -- Optional configuration
    })
  end
}
<

4.  CONFIGURATION                                      *unified-configuration*

Configuration with default values: >
require('unified').setup({
  signs = {
    add = "│",
    delete = "│",
    change = "│",
  },
  highlights = {
    add = "DiffAdd",
    delete = "DiffDelete",
    change = "DiffChange",
  },
  line_symbols = {
    add = "+",
    delete = "-",
    change = "~",
  },
  auto_refresh = true, -- Whether to automatically refresh diff when buffer changes
})
<

5.  USAGE                                                      *unified-usage*

1. Open a file in Neovim.
2. Make some changes to the file.
3. Run the command `:Unified` to display the diff against HEAD and the file tree.
4. Use `:Unified reset` to close the view.
5. Run `:Unified <commit_ref>` to show the diff against a specific commit.

File Tree Interaction:
When you run `:Unified <commit_ref>`, a file tree explorer opens in a split
window. This tree shows files changed relative to the specified commit.
*Note:* A Nerd Font is required to display file/folder icons correctly.

Status Indicators:

  - `M`: Modified
  - `A`: Added
  - `D`: Deleted
  - `R`: Renamed
  - `C`: Copied
  - `?`: Untracked (if showing untracked files is enabled)

Path Shortening:
To fit longer paths within the file tree window, paths are automatically
shortened. The beginning part of the path might be replaced with '...' if it
exceeds the available width, prioritizing the display of the filename and its
immediate parent directories.

Default Keymaps (in the file tree window):

  - `j`/`k`: Move the cursor down/up. Automatically opens the file under the
    cursor in the main window, displaying its diff.
  - `q`: Close the file tree window.
  - `R`: Refresh the file tree contents.
  - `?`: Show a help dialog (if implemented).

==============================================================================
6. COMMANDS                                                *unified-commands*

:Unified [{commit_ref}]
The main command for the plugin. Behavior depends on arguments and state:

:Unified (no arguments)
    Shows the diff between the current buffer and `HEAD`. Opens the file
    tree showing files changed since `HEAD`. Equivalent to `:Unified HEAD`.

:Unified {commit_ref}
    Shows the diff between the current buffer and the specified git
    reference ({commit_ref}). Opens the file tree showing files changed
    since {commit_ref}. {commit_ref} can be a commit hash, branch name,
    tag, etc. Autocompletion is provided for {commit_ref}. The specified
    {commit_ref} is stored and used for subsequent refreshes until a new
    reference is provided or the view is closed.

:Unified reset
    Removes all unified diff highlights and signs from the current buffer
    and closes the unified file tree window if it is open.

==============================================================================
7. API                                                        *unified-api*

The plugin exposes a few functions for integration and scripting.

`require('unified').setup(opts)`
  Sets up the plugin with the given options. See |unified-configuration|.

`require('unified.command').run(args)`
  Programmatically runs the main `:Unified` command. `args` is a string
  containing the command-line arguments (e.g., "HEAD~1", "reset").

`require('unified').toggle()`
  Toggles the unified diff view for the current buffer. If the view is
  active, it will be closed. Otherwise, it will be opened, showing the
  diff against the last used commit reference (or `HEAD` by default).

`require('unified.navigation').next_hunk()`
  Jumps to the next hunk in the current buffer.

`require('unified.navigation').previous_hunk()`
  Jumps to the previous hunk in the current buffer.

`require('unified.diff').show_current({commit})`
    Show / refresh the unified diff for the **current buffer only**.
    If {commit} is provided, it is used as the reference. Otherwise, it
    uses the commit reference chosen by `:Unified` (or `HEAD` if none).
==============================================================================
8. MAPPINGS                                                *unified-mappings*

`unified.nvim` does not create any global mappings by default.

You should set your own mappings. Foe example, for hunk navigation:
    >
    vim.keymap.set("n", "]h", require("unified.navigation").next_hunk)
    vim.keymap.set("n", "[h", require("unified.navigation").previous_hunk)

==============================================================================
9. TROUBLESHOOTING                                  *unified-troubleshooting*

  - If no diff is shown, check that:

      - Your buffer has a file name (saved at least once)
      - You have made changes to the buffer compared to the saved file
      - The `diff` command is available in your PATH

  - If sign column markers are not showing:

      - Make sure your 'signcolumn' option is set to 'yes' or 'auto'

vim:tw=78:ts=8:ft=help:norl:
